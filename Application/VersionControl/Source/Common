#!/usr/bin/env bash

function print() {
	printf "** $1\r\n";
}

function userChoice () {
    read choice;
    case $choice in
      "n"|"N" ) echo 'N';;
      "y"|"Y" ) echo 'Y';;
      *) echo 'Response not valid';;
    esac
}

function genesisHelp() {
	print "Welcome to Genesis Remote Bash
==================================
-- Commands Available --

dir - switch to genesis directory
edit - edit genesis in editor
errorlog - display real time php error log
status - show git status
save - commit and push to repo
update - pull changes from repo
point ?[branch] - point to a branch/tag
version - shows local app version
tags - shows tags on local app
execute - execute command on genesis directory
log ?[number] - show git log of app
config - open the config folder of genesis in the editor
branch
  * list - lists branches
  * create [branch] - create new branch
  * delete [branch] - delete branch

remote";

if [[ ! -z $genesis_sshUser ]] || [[ ! -z $genesis_sshIp ]]; then

printf "  * login - ssh into remote server
  * update - update server app
  * point ?[branch] - point to branch/version/tag
  * version - shows the current version of your application
  * tags - shows the tags available on the remote server
  * execute - execute command on remote server

";
else
	print "You need to configure your servers SSH details to access remote commands, run 'genesis bash config' to configure.
	";
fi;

printf "bash
  * edit - edit genesis bash
  * reload - reload genesis bash env
  * config - edit configuration

help - shows this menu

";

}

function genesis() {
	case $1 in
		"help" )
			genesisHelp;;
		"edit" )
			genesisEdit;;
		"dir" )
			cd $genesis_dir;;
		"errorlog" )
			genesisErrorLog;;
		"status" )
			genesisStatus;;
		"save" )
			genesisSave;;
		"point" )
			genesisPoint $2;;
		"update" )
			genesisUpdate;;
		"execute" )
			genesisExecute;;
		"version" )
			genesisVersion $2;;
		"tags" )
			genesisTags;;
		"log" )
			genesisLog $2;;
		"config" )
			genesisConfig;;
		"branch" )
			case $2 in
				"list" )
					genesisBranch;;
				"create" )
					genesisBranchCreate $3;;
				"delete" )
					genesisBranchDelete $3;;
			esac;;
		"bash" )
			case $2 in
				"reload" )
					genesisBashReload;;
				"edit" )
					genesisBashEdit;;
				"config" )
					editGenesisConfig;;
			esac;;
		"remote" )
			case $2 in
				"login" )
					genesisSSH;;
				"update" )
					genesisRemoteFetch;;
				"point" )
					genesisRemotePoint $3;;
				"version" )
					genesisRemoteVersion;;
				"tags" )
					genesisRemoteTags;;
				"execute" )
					genesisRemoteExecute;;
			esac;;
		"*" )
			print "Unknown option entered, aborting";
	esac
}

function sourceFile() {
	source $genesis_vc$1;
}

function genesisConfigCreate() {
	cp $(dirname "${BASH_SOURCE[0]}")/../Config/Variables.dist $(dirname "${BASH_SOURCE[0]}")/../Config/Variables;
}

function editGenesisConfig() {
	$genesis_editor $genesis_vc/Config/Variables;
	sourceFile Config/Variables;
}
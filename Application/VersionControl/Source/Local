#!/usr/bin/env bash

function genesisEdit() {
	$genesis_editor $genesis_dir;
}

function genesisSave() {

	currentDir=$(pwd);
	cd $genesis_dir;
	print "Files edited:";
	git diff --name-only

	cd $currentDir;

	print "Please enter a commit message:";
	read message;

	cd $genesis_dir;

	genesisTags;
	genesisVersion;

	cd $currentDir;

	print "Please enter a version number for this push: (leave empty to skip tagging)";
	read version;

	print "Attempting to commit with message '$message' and tag '$version', continue? [Y/N]";
	if [[ $(userChoice) != 'Y' ]]; then
		return;
	fi

	print "Saving changes with message: '$message'";

	cd $genesis_dir;

	git pull;
	git add --all;
	git commit -m "$message";
	git push;

	if [[ ! -z $version ]]; then
		git tag $version;
		git push --tag;
	fi;

	cd $currentDir;
}

function genesisUpdate() {
	print "Updating genesis on local machine";
	currentDir=$(pwd);
	cd $genesis_dir;
	git pull;
	cd $currentDir;
}

function genesisStatus() {
	print "Showing git status on Genesis";
	currentDir=$(pwd);
	cd $genesis_dir;
	git status;
	cd $currentDir;
}

function genesisTags() {
	print "Existing Tags:";
	currentDir=$(pwd);
	cd $genesis_dir;
	git tag;
	cd $currentDir;
}

function genesisVersion() {
	print "Current version:";
	currentDir=$(pwd);
	cd $genesis_dir;
	git describe --tag
	cd $currentDir;
}

function genesisPoint() {

	if [[ -z $1 ]]; then
		branch='development';
	else
		branch=$1;
	fi

	print "Pointing local env to branch/tag '$branch':";
	currentDir=$(pwd);
	cd $genesis_dir;
	git checkout $branch;
	cd $currentDir;
}

function genesisExecute() {
	print "Enter command to run:";
	read genesisCommand;

	if [[ -z $genesisCommand ]]; then
		return;
	fi

	currentDir=$(pwd);
	cd $genesis_dir;
	$genesisCommand;
	cd $currentDir;
}

function genesisBranch() {
	print "Showing branches:";
	currentDir=$(pwd);
	cd $genesis_dir;
	git branch;
	cd $currentDir;
}

function genesisBranchCreate() {
	print "Creating/Switching branch '$1':";
	currentDir=$(pwd);
	cd $genesis_dir;
	git branch $1;
	git checkout $1;
	git branch -u origin/$1;
	cd $currentDir;
}

function genesisBranchDelete() {
	print "Deleting branch '$1':";
	currentDir=$(pwd);
	cd $genesis_dir;
	git branch -D $1;
	cd $currentDir;
}